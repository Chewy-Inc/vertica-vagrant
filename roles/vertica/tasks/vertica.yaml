---
- name: Check if Vertica is already installed
  command: dpkg -l vertica
  register: vertica_deb_installed_check
  changed_when: False
  ignore_errors: True

- name: Install Vertica DEB package
  command: dpkg -i /tmp/vertica.deb
  when: vertica_deb_installed_check|failed

- name: Check if Vertica adminTools configuration exists
  command: test -f /opt/vertica/config/admintools.conf
  register: admintools_config_exists_check
  changed_when: False
  ignore_errors: True

- name: Install Vertica using the install script
  sudo: true
  sudo_user: root
  shell: /opt/vertica/sbin/install_vertica --hosts 127.0.0.1 --license CE --accept-eula --point-to-point --dba-user-password-disabled
  when: admintools_config_exists_check|failed

- name: Check if the default database exists
  command: test -d /home/dbadmin/default ## TODO make this check more robust
  register: default_database_exists_check
  changed_when: False
  ignore_errors: True

- name: Create default Vertica database
  shell: su dbadmin -c "/opt/vertica/bin/adminTools -t create_db -s 127.0.0.1 -d default --policy=always"
  when: default_database_exists_check|failed

- name: Start the database
  service: name=verticad state=started

- name: Create useful bash aliases for the 'dbadmin' user
  lineinfile: dest=/home/dbadmin/.bashrc regexp="alias {{item.key}}=" line="alias {{item.key}}='{{item.value}}'" state=present
  with_items:
    - { key: 'vsql', value: '/opt/vertica/bin/vsql' }
    - { key: 'admintools', value: '/opt/vertica/bin/adminTools'}
